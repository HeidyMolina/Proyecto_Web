<!DOCTYPE html>
<html lang="es">
<head>
  <meta charset="UTF-8" />
  <title>Quiz Militar - SANIDAD Y PRIMEROS AUXILIOS</title>
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <link href="https://fonts.googleapis.com/css2?family=Press+Start+2P&display=swap" rel="stylesheet">
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/animate.css/4.1.1/animate.min.css"/>
</head>
<body>
  

  <style>
    :root{
      --azul-1:#5ac8fa;
      --azul-2:#4f7cff;
      --verde-1:#00e676;
      --rojo-1:#ff5252;
      --card-bg: linear-gradient(145deg, rgba(255,255,255,.95), rgba(240,248,255,.95));
    
    }
    #enunciado {
  color: #000; /* negro */
}
#rondaScore,
#totalScore {
  color: #000; /* negro */
}
.hero {
  margin-top: 60px; /* üëà baja todo el bloque para que no lo tape el encabezado */
}

.stats .stat {
  color: #0d2c66; /* üëà texto negro */
  font-weight: bold;
}




    
    body {
  margin: 0;
  padding: 0;
  font-family: 'Press Start 2P', cursive;
  background: url('/images-requisitos/sanidadfondo.png') no-repeat center center fixed;
  background-size: cover;
}

    .wrap{
      max-width: 980px;
      margin: 40px auto;
      padding: 16px;
    }
    .hero{
      background: linear-gradient(135deg, var(--azul-2), #22d3ee);
      color:#fff;
      border-radius: 28px;
      padding: 28px 22px;
      box-shadow: 0 20px 40px rgba(0,0,0,.15);
      position: relative;
      overflow: hidden;
    }
    .hero:after{
      content:"";
      position:absolute; inset:-40px -60px auto auto;
      width:280px; height:280px; border-radius:50%;
      background: radial-gradient(circle at 30% 30%, rgba(255,255,255,.35), transparent 60%);
      filter: blur(2px);
      animation: orb 6s ease-in-out infinite alternate;
    }
    @keyframes orb{to{transform: translate(-10px,10px) scale(1.06)}}

    .badge-soft{
      display:inline-block; padding:6px 12px; border-radius:999px;
      background:rgba(255,255,255,.18); color:#fff; backdrop-filter: blur(6px);
      border: 1px solid rgba(255,255,255,.35); font-weight:800; letter-spacing:.3px;
    }

    .card-quiz {
  background: #6d3b47; /* morado retro */
  border: 4px solid #000;
  border-radius: 12px;
  max-width: 900px;
  margin: 50px auto;
  padding: 40px 20px;
  text-align: center;
  color: #fff;
  box-shadow: 0 0 0 6px #000;
  position: relative;
}

.card-quiz::before {
  content: "‚òÖ";
  font-size: 32px;
  color: gold;
  position: absolute;
  top: -26px;
  left: 50%;
  transform: translateX(-50%);
}
.card-quiz{
      background: var(--card-bg);
      border-radius: 24px;
      padding: 24px;
      box-shadow: 0 14px 30px rgba(0,0,0,.12);
      margin-top: 22px;
    }
    .progress{
      height: 18px; border-radius: 12px; background: rgba(0,0,0,.08);
      overflow: hidden;
    }
    .progress-bar{
      background: linear-gradient(90deg, var(--azul-2), var(--azul-1));
      font-weight:800;
    }

    .opciones{
      display:grid; gap:14px;
      grid-template-columns: 1fr; /* one column on mobile */
    }
    @media(min-width:768px){ .opciones{ grid-template-columns: 1fr 1fr; } }

    .opcion, .btn-next, #btnReintentar, #btnMenu {
  background: #ffcc00;
  border: 3px solid #000;
  border-radius: 4px;
  padding: 15px 20px;
  font-family: 'Press Start 2P', cursive;
  color: #000;
  text-transform: uppercase;
  box-shadow: 4px 4px 0 #000;
  transition: transform .2s ease;
}

.opcion:hover, .btn-next:hover {
  transform: translate(-2px, -2px);
  box-shadow: 6px 6px 0 #000;
}

    .opcion.correct{ background: linear-gradient(135deg, #eafff5, #ffffff); box-shadow:0 10px 26px rgba(16,185,129,.35); }
    .opcion.correct .letra{ background: linear-gradient(135deg, #10b981, #22c55e); }
    .opcion.incorrect{ background: linear-gradient(135deg, #fff0f0, #ffffff); box-shadow:0 10px 26px rgba(244,63,94,.25); }
    .opcion.incorrect .letra{ background: linear-gradient(135deg, #ef4444, #f97316); }

    .pill{
      display:inline-flex; align-items:center; gap:8px;
      padding:8px 12px; border-radius:999px; font-weight:800;
      background:#fff; color:#0f172a; box-shadow: 0 10px 20px rgba(0,0,0,.08);
    }
    .pill .dot{ width:10px; height:10px; border-radius:50%; background: var(--verde-1); }

    .btn-next{
      border:0; border-radius:14px; padding:12px 18px; font-weight:800;
      background: linear-gradient(135deg, var(--azul-2), var(--azul-1));
      color:#fff; box-shadow:0 12px 24px rgba(2,0,84,.25);
    }
    .btn-next:disabled{ opacity:.5; box-shadow:none; }

    .stats{
      display:flex; gap:10px; flex-wrap: wrap;
    }
    .stats .stat{
      background:#fff; border-radius:14px; padding:10px 14px; font-weight:800;
      box-shadow:0 6px 14px rgba(0,0,0,.08);
    }

    .result-card{
      text-align:center; padding:26px 18px;
      background: linear-gradient(145deg, #ffffff, #ecfeff);
      border-radius:24px; box-shadow:0 16px 32px rgba(0,0,0,.12);
    }

    /* Confeti canvas */
    #confettiCanvas{
      position:fixed; inset:0; width:100vw; height:100vh; pointer-events:none; z-index:9999; display:none;
    }
  </style>
</head>
<body>
  <canvas id="confettiCanvas"></canvas>

  <div class="wrap">
    <div class="hero mb-4 animate__animated animate__fadeInDown">
      <div class="d-flex justify-content-between align-items-center">
        <span class="badge-soft">MiniJuego</span>
        <div class="stats">
  <div class="stat">‚è±Ô∏è Tiempo: <span id="tiempo">0:00</span></div>
  <div class="stat">‚úîÔ∏è Aciertos: <span id="rondaScore">0</span></div>
</div>



      </div>
      <h1 class="mt-3 mb-2 fw-bold">SANIDAD Y PRIMEROS AUXILIOS</h1>
<p class="mb-0">Elige la respuesta correcta y aprende sobre medicina preventiva y primeros auxilios en el Ej√©rcito. ü©∫</p>

    </div>

    <div class="card-quiz animate__animated animate__fadeInUp">
      <!-- Progreso -->
      <div class="d-flex align-items-center justify-content-between mb-2">
        <div class="pill"><span class="dot"></span> Progreso</div>
        <div class="fw-bold"><span id="nActual">1</span>/<span id="nTotal">10</span></div>
      </div>
      <div class="progress mb-3">
        <div id="barra" class="progress-bar progress-bar-striped progress-bar-animated" style="width:0%">0%</div>
      </div>

      <!-- Pregunta -->
      <h3 id="enunciado" class="mb-3">Cargando‚Ä¶</h3>

      <!-- Opciones -->
      <div id="opciones" class="opciones"></div>

      <!-- Botones -->
      <div class="d-flex gap-2 justify-content-end mt-3">
  <button id="btnIniciar" class="btn-next">Iniciar</button>
  <button id="btnSiguiente" class="btn-next" style="display:none">Siguiente</button>
  <button id="btnReintentar" class="btn btn-outline-secondary rounded-3" style="display:none">Reintentar</button>
  <a href="/juegos" class="btn btn-outline-primary rounded-3" id="btnMenu" style="display:none">Men√∫ de Juegos</a>
</div>

    </div>
<div class="d-flex gap-2 justify-content-end mt-3">
  <a href="/minigame" class="btn btn-warning rounded-3">Volver a men√∫ Juegos</a>
</div>

  
</div>

    <!-- Resultado final -->
   <div id="final" class="result-card mt-4 animate__animated animate__fadeIn" style="display:none">
  <h2 class="fw-bold mb-2">¬°Buen trabajo! üéâ</h2>
  <p class="mb-1">Aciertos en esta ronda: <strong><span id="finalRonda">0</span>/<span id="finalTotal">0</span></strong></p>
  <p class="mb-1">Tiempo total: <strong><span id="tiempoFinal">0:00</span></strong> ‚è±Ô∏è</p>
  <div class="d-flex gap-2 justify-content-center">
  <button id="btnOtraVez" class="btn btn-success rounded-3">Jugar otra vez</button>
  <button id="btnReset" class="btn btn-danger rounded-3">Borrar progreso</button>
</div>

</div>


  <script>
  
// ======= Banco de preguntas (Sanidad y Primeros Auxilios) =======
const preguntas = [
  {
    q: "¬øCu√°l es el objetivo principal de la medicina preventiva en el Ej√©rcito?",
    a: [
      "Detectar enfermedades cuando ya est√°n avanzadas.",
      "Evitar enfermedades y mantener la capacidad operativa de los soldados mediante h√°bitos de higiene y control sanitario.",
      "Reducir √∫nicamente los gastos m√©dicos del Ej√©rcito."
    ],
    ok: 1,
    detalle: "La medicina preventiva busca mantener a los soldados sanos antes de que se enfermen.",
    explicacion: "Con h√°bitos de higiene, vacunaci√≥n y control sanitario se garantiza que puedan cumplir sus misiones en buenas condiciones."
  },
  {
    q: "¬øQu√© medida b√°sica de higiene personal previene m√°s infecciones?",
    a: [
      "Ba√±arse una vez por semana.",
      "Usar ropa limpia despu√©s de cada jornada.",
      "El lavado frecuente de manos con agua y jab√≥n."
    ],
    ok: 2,
    detalle: "Las manos transmiten la mayor√≠a de g√©rmenes.",
    explicacion: "Lavarlas con agua y jab√≥n elimina bacterias y virus, previniendo infecciones digestivas y respiratorias."
  },
  {
    q: "¬øQu√© recomendaci√≥n b√°sica ayuda a prevenir insolaciones durante operaciones?",
    a: [
      "Hidratarse constantemente y descansar en la sombra.",
      "Usar gorra o casco y ropa adecuada que proteja del sol.",
      "Evitar actividades intensas en las horas de mayor calor."
    ],
    ok: 1,
    detalle: "La insolaci√≥n se previene con hidrataci√≥n y protecci√≥n solar.",
    explicacion: "Evitar exposici√≥n directa y usar ropa adecuada reduce riesgos serios para la salud."
  },
  {
    q: "¬øCu√°l es la primera acci√≥n al llegar a un herido?",
    a: [
      "Evaluar la seguridad del √°rea antes de acercarse.",
      "Trasladar inmediatamente al herido sin revisar nada.",
      "Revisar primero la gravedad de las heridas sin importar el entorno."
    ],
    ok: 0,
    detalle: "Antes de atender al herido, se debe asegurar que la zona sea segura.",
    explicacion: "De lo contrario, el rescatista tambi√©n puede ser v√≠ctima."
  },
  {
    q: "¬øQu√© significa la sigla ‚ÄúABCDE‚Äù en la evaluaci√≥n inicial de un herido?",
    a: [
      "V√≠a a√©rea (Airway), respiraci√≥n (Breathing), circulaci√≥n (Circulation), estado neurol√≥gico (Disability), exposici√≥n (Exposure).",
      "An√°lisis B√°sico de Condici√≥n, Dolor y Emergencia.",
      "Atenci√≥n Breve con Comida, Descanso y Energ√≠a."
    ],
    ok: 0,
    detalle: "El protocolo ABCDE es universal.",
    explicacion: "Primero v√≠a a√©rea, luego respiraci√≥n, circulaci√≥n, estado neurol√≥gico y por √∫ltimo exposici√≥n del paciente."
  },
  {
    q: "¬øPor qu√© es importante controlar una hemorragia r√°pidamente?",
    a: [
      "Porque la p√©rdida de sangre masiva puede causar shock hipovol√©mico y muerte en pocos minutos.",
      "Para evitar que la herida se infecte de inmediato.",
      "Para que el paciente pueda movilizarse m√°s r√°pido."
    ],
    ok: 0,
    detalle: "La p√©rdida de sangre compromete la vida en minutos.",
    explicacion: "Detener la hemorragia es lo primero que se debe hacer."
  },
  {
    q: "¬øQu√© debe hacerse primero con un herido inconsciente que respira?",
    a: [
      "Colocarlo en posici√≥n lateral de seguridad para mantener la v√≠a a√©rea libre.",
      "Iniciar compresiones tor√°cicas de inmediato.",
      "Intentar despertarlo con sacudidas fuertes."
    ],
    ok: 0,
    detalle: "La posici√≥n lateral evita que la lengua o fluidos bloqueen la respiraci√≥n.",
    explicacion: "Si respira, no se hacen compresiones, solo se mantiene la v√≠a a√©rea segura."
  },
  {
    q: "¬øQu√© se debe hacer si un soldado presenta fractura expuesta?",
    a: [
      "Controlar el sangrado, cubrir la herida con ap√≥sito limpio y entablillar sin mover en exceso la extremidad.",
      "Enderezar el hueso antes de inmovilizar.",
      "Trasladarlo sin cubrir la herida para que respire."
    ],
    ok: 0,
    detalle: "Las fracturas expuestas son graves.",
    explicacion: "Se debe controlar la hemorragia, proteger la herida y estabilizar el hueso."
  },
  {
    q: "¬øCu√°l es la relaci√≥n de compresiones y ventilaciones en la RCP b√°sica de un adulto?",
    a: [
      "30 compresiones por 2 ventilaciones.",
      "15 compresiones por 1 ventilaci√≥n.",
      "50 compresiones sin ventilaciones."
    ],
    ok: 0,
    detalle: "El est√°ndar internacional es 30:2.",
    explicacion: "Esta proporci√≥n asegura un equilibrio entre circulaci√≥n y oxigenaci√≥n."
  },
  {
    q: "¬øC√≥mo se reconoce un shock?",
    a: [
      "Piel p√°lida y fr√≠a, pulso d√©bil y r√°pido, respiraci√≥n acelerada y confusi√≥n o p√©rdida de conciencia.",
      "Dolor en el pecho y respiraci√≥n pausada.",
      "Fiebre alta y sudoraci√≥n abundante."
    ],
    ok: 0,
    detalle: "El shock ocurre cuando no llega suficiente sangre a los √≥rganos vitales.",
    explicacion: "Los signos cl√°sicos son piel fr√≠a, pulso d√©bil y alteraci√≥n de conciencia."
  },
  {
    q: "¬øQu√© debe hacerse inmediatamente ante una quemadura grave?",
    a: [
      "Enfriar con agua limpia (no helada), cubrir con gasas limpias y no aplicar pomadas.",
      "Aplicar aceite o pomadas sobre la herida.",
      "Dejar la piel expuesta para que cicatrice al aire."
    ],
    ok: 0,
    detalle: "El agua detiene la progresi√≥n de la quemadura.",
    explicacion: "Cubrir protege contra infecciones. No se aplican sustancias caseras."
  },
  {
    q: "¬øQu√© signos indican insolaci√≥n severa?",
    a: [
      "Piel caliente y seca, temperatura elevada, confusi√≥n, convulsiones o p√©rdida de conciencia.",
      "Mareo leve y sudor abundante.",
      "Piel fr√≠a y escalofr√≠os."
    ],
    ok: 0,
    detalle: "En la insolaci√≥n grave el cuerpo deja de sudar.",
    explicacion: "Eso provoca fiebre alta y da√±o neurol√≥gico."
  },
  {
    q: "¬øQu√© acci√≥n debe tomarse en caso de mordedura de serpiente?",
    a: [
      "Mantener al paciente en reposo, inmovilizar la extremidad y trasladarlo urgentemente a un hospital.",
      "Colocar hielo directamente sobre la herida.",
      "Intentar cortar y succionar el veneno."
    ],
    ok: 0,
    detalle: "Lo correcto es inmovilizar y trasladar al hospital.",
    explicacion: "El tratamiento adecuado es el suero antiof√≠dico."
  },
  {
    q: "¬øQu√© significa TRIAGE en atenci√≥n de emergencias?",
    a: [
      "Es la clasificaci√≥n de heridos seg√∫n la gravedad para priorizar la atenci√≥n m√©dica.",
      "Es una t√©cnica especial de vendaje en tri√°ngulo.",
      "Es el traslado inmediato de todos los heridos al mismo tiempo."
    ],
    ok: 0,
    detalle: "El TRIAGE organiza la atenci√≥n en situaciones con muchos heridos.",
    explicacion: "As√≠ los m√°s graves son atendidos primero."
  },
  {
    q: "¬øCu√°l es la regla b√°sica al trasladar a un herido?",
    a: [
      "Evitar movimientos bruscos, mantener alineada la columna y asegurar la v√≠a a√©rea.",
      "Trasladarlo lo m√°s r√°pido posible aunque tenga fracturas.",
      "Sentarlo aunque est√© inconsciente."
    ],
    ok: 0,
    detalle: "Un mal traslado puede empeorar lesiones graves, sobre todo en columna.",
    explicacion: "Se debe mover con cuidado y asegurar primero la respiraci√≥n."
  }
];



    // ======= Estado =======
const N = preguntas.length;
let idx = 0;
let rondaCorrectas = 0;

// üïí Cron√≥metro
let tiempo = 0;          // tiempo en segundos
let intervaloTiempo = null;

const KEY_TOTAL = 'quiz_sanidad_total_correctas';


    

    // ======= DOM =======
    const enunciado  = document.getElementById('enunciado');
    const contOps    = document.getElementById('opciones');
    const barra      = document.getElementById('barra');
    const nAct       = document.getElementById('nActual');
    const nTot       = document.getElementById('nTotal');
    const btnSig     = document.getElementById('btnSiguiente');
    const btnReint   = document.getElementById('btnReintentar');
    const btnMenu    = document.getElementById('btnMenu');
    const rondaSpan  = document.getElementById('rondaScore');
    const totalSpan  = document.getElementById('totalScore');

    const finalBox   = document.getElementById('final');
    const finalRonda = document.getElementById('finalRonda');
    const finalTotal = document.getElementById('finalTotal');
    const btnOtraVez= document.getElementById('btnOtraVez');
    const btnReset   = document.getElementById('btnReset');


    const confettiCanvas = document.getElementById('confettiCanvas');
    const ctx = confettiCanvas.getContext('2d');

    // ======= Util =======
function pct() {
  const p = Math.round((idx / N) * 100);
  barra.style.width = p + '%';
  barra.textContent = p + '%';
}

// ======= Borrar progreso =======
function resetAcumuladoUI() {
  localStorage.removeItem('quiz_tiempo');
  localStorage.removeItem('quiz_correctas');
  tiempo = 0;
  rondaCorrectas = 0;
  document.getElementById('tiempo').textContent = '0:00';
  document.getElementById('tiempoFinal').textContent = '0:00';
  rondaSpan.textContent = '0';
  finalRonda.textContent = '0';
  finalAcum.textContent = '0';
}

// ======= Guardar progreso en localStorage =======
function guardarProgreso() {
  localStorage.setItem('quiz_sanidad_tiempo', tiempo);
localStorage.setItem('quiz_sanidad_correctas', rondaCorrectas);

}

// ======= Cargar progreso desde localStorage =======
function cargarProgreso() {
  const t = localStorage.getItem('quiz_sanidad_tiempo');
  const r = localStorage.getItem('quiz_sanidad_correctas');

  if (t !== null) {
    tiempo = parseInt(t, 10);
    document.getElementById('tiempo').textContent = formatearTiempo(tiempo);
  }
  if (r !== null) {
    rondaCorrectas = parseInt(r, 10);
    rondaSpan.textContent = rondaCorrectas;
  }
}

// üëâ variable global para guardar la mezcla de opciones
let opcionesActuales = [];

// üëâ funci√≥n para barajar opciones de cada pregunta
function mezclarOpciones(p) {
  const opciones = p.a.map((texto, i) => ({
    texto,
    esCorrecta: i === p.ok
  }));
  for (let i = opciones.length - 1; i > 0; i--) {
    const j = Math.floor(Math.random() * (i + 1));
    [opciones[i], opciones[j]] = [opciones[j], opciones[i]];
  }
  return opciones;
}

// üëâ cron√≥metro
function iniciarCronometro() {
  tiempo = 0;
  if (intervaloTiempo) clearInterval(intervaloTiempo);

  intervaloTiempo = setInterval(() => {
    tiempo++;
    document.getElementById('tiempo').textContent = formatearTiempo(tiempo);
    guardarProgreso(); // üî• guarda el tiempo en cada segundo
  }, 1000);
}

function detenerCronometro() {
  clearInterval(intervaloTiempo);
}

function formatearTiempo(segundos) {
  const min = Math.floor(segundos / 60);
  const seg = segundos % 60;
  return `${min}:${seg.toString().padStart(2, '0')}`;
}



// ======= Render =======
function renderPregunta(){
  const p = preguntas[idx];
  opcionesActuales = mezclarOpciones(p); // üëà mezclamos y guardamos

  enunciado.textContent = p.q;
  contOps.innerHTML = '';
  const letras = ['A','B','C','D','E'];

  opcionesActuales.forEach((op, i) => {
    const btn = document.createElement('button');
    btn.className = 'opcion animate__animated animate__fadeIn';
    btn.innerHTML = `
      <div class="letra">${letras[i]}</div>
      <div>${op.texto}</div>
    `;
    btn.addEventListener('click', () => seleccionar(i, btn));
    contOps.appendChild(btn);
  });

  nAct.textContent = idx + 1;
  nTot.textContent = N;
  pct();
  btnSig.disabled = true;
}

function bloquearOpciones(){
  [...contOps.children].forEach(b => b.disabled = true);
}

function seleccionar(i, btn){
  bloquearOpciones();

  // buscamos cu√°l de las opciones mezcladas es correcta
  const correcta = opcionesActuales.findIndex(op => op.esCorrecta);

  // Recorremos todas las opciones
  [...contOps.children].forEach((b, j) => {
    if (j === correcta) {
      b.classList.add('correct','animate__pulse'); // Verde
    } else {
      b.classList.add('incorrect','animate__shakeX'); // Rojo
    }
  });

  // Contamos punto si eligi√≥ la correcta
  if (i === correcta) {
    rondaCorrectas++;
    guardarProgreso(); 
    // üîä sonido correcto
    new Audio('/audio/quizcorrecto.mp3').play();
  } else {
    // üîä sonido incorrecto
    new Audio('/audio/quizincorrecto.mp3').play();
  }

  rondaSpan.textContent = rondaCorrectas;
  btnSig.disabled = true; // üîí bloqueado hasta cerrar modal

  // Esperar 2 segundos antes de mostrar el modal
  setTimeout(() => {
    const ref = preguntas[idx].ref || "Referencia: Sanidad y primeros auxilios";
    const detalle = preguntas[idx].detalle || "Sin detalle disponible";
    const explicacion = preguntas[idx].explicacion || "";

    document.getElementById('refArticulo').textContent = ref;
    document.getElementById('detalleArticulo').textContent = detalle + " " + explicacion;

    const modalEl = document.getElementById('explicacionModal');
    const modal = new bootstrap.Modal(modalEl);
    modal.show();

    modalEl.addEventListener('hidden.bs.modal', () => {
      btnSig.disabled = false;
    }, { once: true });
  }, 1000);
}




function terminar(){
  finalRonda.textContent = rondaCorrectas;
  finalTotal.textContent = N;

  detenerCronometro();
  document.getElementById('tiempoFinal').textContent = formatearTiempo(tiempo);

  // calcular porcentaje de aciertos
  const porcentaje = Math.round((rondaCorrectas / N) * 100);
  let mensajeFinal = "";

  if (porcentaje === 100) {
    mensajeFinal = "¬°Excelente! Has completado todo con disciplina, como un verdadero soldado üëèüéñÔ∏è";
  } else if (porcentaje >= 70) {
    mensajeFinal = "¬°Muy bien! Has demostrado que dominas lo esencial del tema. Ahora desaf√≠ate a ti mismo y alcanza el 100%, como lo hacen los verdaderos soldados que nunca se rinden.";
  } else {
    mensajeFinal = "Lo hiciste bien, pero debes repasar un poco m√°s, repite el juego y sigue practicando üí™, ¬°NO TE RINDAS SOLDADO!";
  }

  // ‚úÖ Aqu√≠ guardamos el resultado en la base de datos
fetch('/guardar-resultado', {
  method: 'POST',
  headers: { 'Content-Type': 'application/json' },
  body: JSON.stringify({
    juego: "Sanidad Militar", // üëà cambia al nombre correcto
    puntaje: rondaCorrectas,
    tiempo: tiempo
  })
})
.then(res => res.json())
.then(data => {
  if (data.ok) {
    console.log("Resultado guardado correctamente");
  } else {
    console.log("Error al guardar resultado");
  }
})
.catch(err => console.error("Error en fetch:", err));

  // üßπ limpiar anteriores (imagen o textos previos)
  finalBox.querySelectorAll("p.mt-3, img.victoria-img").forEach(el => el.remove());

  // insertar la imagen de victoria antes del mensaje
  const imgVictoria = document.createElement("img");
  imgVictoria.src = "/images-requisitos/victoria1.png";
  imgVictoria.className = "victoria-img mb-3 animate__animated animate__zoomIn";
  imgVictoria.style.maxWidth = "200px";
  finalBox.appendChild(imgVictoria);

  // insertar mensaje final
  const resultadoExtra = document.createElement("p");
  resultadoExtra.className = "mt-3 fw-bold text-dark";
  resultadoExtra.textContent = mensajeFinal;
  finalBox.appendChild(resultadoExtra);

  // üéâ confeti
  lanzarConfeti(140);
  setTimeout(detenerConfeti, 3200);

  // üîä reproducir audios de victoria
  new Audio('/audio/soysoldado.mp3').play();
  new Audio('/audio/victoria.mp3').play();

  document.querySelector('.card-quiz').classList.add('animate__fadeOut');
  setTimeout(() => {
    document.querySelector('.card-quiz').style.display = 'none';
    finalBox.style.display = 'block';
  }, 300);
}



btnIniciar.addEventListener('click', ()=>{
  idx = 0; 
  rondaCorrectas = 0; 
  rondaSpan.textContent = '0';
  tiempo = 0;
  document.getElementById('tiempo').textContent = '0:00';

  // limpiar progreso guardado
  localStorage.removeItem('quiz_tiempo');
  localStorage.removeItem('quiz_correctas');

  // iniciar ronda normal
  contOps.innerHTML = '';
  nTot.textContent = N; 
  nAct.textContent = 0;
  barra.style.width = '0%'; 
  barra.textContent = '0%';

  btnIniciar.style.display = 'none';
  btnSig.style.display = 'inline-block';
  btnSig.disabled = true;
  btnReint.style.display = 'none';
  btnMenu.style.display = 'none';

  iniciarCronometro();
  renderPregunta();
});



    btnSig.addEventListener('click', () => {
      if(idx < N-1){
        idx++;
        renderPregunta();
      }else{
        terminar();
        btnSig.style.display = 'none';
        btnReint.style.display = 'inline-block';
        btnMenu.style.display  = 'inline-block';
      }
    });

    btnReint.addEventListener('click', () => {
      // reiniciar SOLO la ronda actual
      idx = 0; rondaCorrectas = 0;
      rondaSpan.textContent = '0';
      document.querySelector('.card-quiz').style.display = 'block';
      finalBox.style.display = 'none';
      btnSig.style.display = 'inline-block';
      btnReint.style.display = 'none';
      btnMenu.style.display  = 'none';
      renderPregunta();
    });

    btnOtraVez.addEventListener('click', () => {
  location.reload(); // üî• recarga toda la p√°gina
});


    // ‚ö†Ô∏è Aseg√∫rate de tener solo 1 bot√≥n con id="btnResetAcum"
btnReset.addEventListener('click', (e) => {
  e.preventDefault();

  Swal.fire({
    title: '¬øBorrar progreso?',
    text: 'Se reiniciar√° tu tiempo y respuestas correctas.',
    icon: 'question',
    showCancelButton: true,
    confirmButtonText: 'S√≠',
    cancelButtonText: 'No',
    confirmButtonColor: '#3085d6',
    cancelButtonColor: '#aaa',
    background: '#fff',
    color: '#000',
    width: '480px',
    padding: '1em',
    customClass: { popup: 'animate__animated animate__fadeInDown' }
  }).then((result) => {
    if (result.isConfirmed) {
      // üßπ resetear progreso
      localStorage.removeItem('quiz_tiempo');
      localStorage.removeItem('quiz_correctas');
      tiempo = 0;
      rondaCorrectas = 0;
      document.getElementById('tiempo').textContent = '0:00';
      document.getElementById('tiempoFinal').textContent = '0:00';
      rondaSpan.textContent = '0';
      finalRonda.textContent = '0';

      Swal.fire({
        title: 'Progreso borrado ‚úÖ',
        toast: true,
        position: 'top',
        timer: 1500,
        showConfirmButton: false,
        background: '#fff',
        color: '#000'
      });
    } else if (result.dismiss === Swal.DismissReason.cancel) {
      // üëâ toast de cancelaci√≥n
      Swal.fire({
        title: 'Acci√≥n cancelada ‚ùå',
        toast: true,
        position: 'top',
        timer: 1200,
        showConfirmButton: false,
        background: '#fff',
        color: '#000'
      });
    }
  });
});





    // ======= Confeti simple =======
    let confettis = [], confetiActivo = false;
    function crearConfeti(){
      return {
        x: Math.random() * window.innerWidth,
        y: Math.random() * -50,
        r: Math.random() * 6 + 4,
        d: Math.random() * 100,
        color: `hsl(${Math.random()*360}, 80%, 60%)`,
        tilt: Math.random() * 10 - 5,
        tiltAngle: 0,
        tiltAngleIncrement: Math.random() * 0.07 + 0.05
      };
    }
    function lanzarConfeti(n=120){
      confetiActivo = true;
      confettis = Array.from({length:n}, crearConfeti);
      confettiCanvas.style.display = 'block';
      confettiCanvas.width = window.innerWidth;
      confettiCanvas.height = window.innerHeight;
      requestAnimationFrame(dibujarConfeti);
    }
    function dibujarConfeti(){
      ctx.clearRect(0,0,confettiCanvas.width, confettiCanvas.height);
      confettis.forEach(c=>{
        ctx.beginPath();
        ctx.lineWidth = c.r;
        ctx.strokeStyle = c.color;
        ctx.moveTo(c.x + c.tilt + c.r/2, c.y);
        ctx.lineTo(c.x + c.tilt, c.y + c.tilt + c.r);
        ctx.stroke();
      });
      confettis.forEach(c=>{
        c.tiltAngle += c.tiltAngleIncrement;
        c.y += Math.cos(0.01 + c.d) + 2;
        c.tilt = Math.sin(c.tiltAngle) * 15;
      });
      if(confetiActivo) requestAnimationFrame(dibujarConfeti);
    }
    function detenerConfeti(){
      confetiActivo = false;
      confettiCanvas.style.display = 'none';
      ctx.clearRect(0,0,confettiCanvas.width, confettiCanvas.height);
    }
    window.addEventListener('resize', ()=>{
      confettiCanvas.width = window.innerWidth;
      confettiCanvas.height = window.innerHeight;
    });

    // ======= Init =======
(function init(){
  nTot.textContent = N;
  rondaSpan.textContent = '0';
  enunciado.textContent = 'Presiona INICIAR para comenzar';
  cargarProgreso(); // üî• si hab√≠a progreso guardado, lo muestra
})();




// Reiniciar animaciones al abrir el modal
const modalEl = document.getElementById('explicacionModal');
modalEl.addEventListener('show.bs.modal', () => {
  const img = modalEl.querySelector('img');
  const text = modalEl.querySelector('.animate__fadeInRight');
  
  // Reinicia animaci√≥n de la imagen
  img.classList.remove('animate__fadeInLeft');
  void img.offsetWidth; 
  img.classList.add('animate__fadeInLeft');

  // Reinicia animaci√≥n del texto
  text.classList.remove('animate__fadeInRight');
  void text.offsetWidth;
  text.classList.add('animate__fadeInRight');
});
</script>


<!-- Modal Explicaci√≥n -->
<div class="modal fade" id="explicacionModal" tabindex="-1">
  <div class="modal-dialog modal-dialog-centered">
    <div class="modal-content">
      <div class="modal-header bg-primary text-white">
        <h5 class="modal-title">Explicaci√≥n:</h5>
        <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"></button>
      </div>
      <div class="modal-body d-flex align-items-start gap-3">
  <!-- Imagen del soldado con animaci√≥n -->
  <img src="/images/3.png" alt="Soldado explicando" 
       style="width: 80px; height: auto;" 
       class="flex-shrink-0 animate__animated animate__fadeInLeft">

  <!-- Texto de referencia y explicaci√≥n con animaci√≥n -->
  <div class="animate__animated animate__fadeInRight">
    <h6 id="refArticulo" class="fw-bold text-dark"></h6>
    <p id="detalleArticulo" class="text-dark"></p>
  </div>
</div>

      <div class="modal-footer">
        <button type="button" class="btn btn-success" data-bs-dismiss="modal">Entendido</button>
      </div>
    </div>
  </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>


</body>
</html>